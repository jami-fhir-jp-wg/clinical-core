name: Ohe-build
on:
  push:
    branches: 
      - ePCS-integrated
    paths:
      - 'sushi-config.yaml'
      - 'input/**'
      - 'custom-template/**'
      - '.github/workflows/main.yml'
      - 'script/*.py'
  pull_request:
    branches: [ ePCS-integrated ]
  repository_dispatch:
    types: [update]
env:
  release_version : 1.5.0
jobs:
  turn:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0']
    environment: SSH_PORT_JPFHIR  # JAMI WG アップロードサイトに関するアクセス情報の環境名
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.client_payload.ref }}
        submodules: true

    - name: Setup npm
      uses: actions/setup-node@v2
      with: 
        check-latest: true

    - name: Setup Sushi
      run: |
        sudo npm install -g fsh-sushi
         
    - name: Install Jekyll
      run: |
        sudo apt-get install ruby-full build-essential zlib1g-dev
        echo '# Install Ruby Gems to ~/gems' >> ~/.bashrc
        echo 'export GEM_HOME="$HOME/gems"' >> ~/.bashrc
        echo 'export PATH="$HOME/gems/bin:$PATH"' >> ~/.bashrc
        source ~/.bashrc
        sudo gem install jekyll bundler

    - name: Download IG Publisher 1.6.11
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: HL7/fhir-ig-publisher
        tag: '1.6.11'
        path: .
        file: publisher.jar

    - name: Download validator_cli_6.1.8.jar
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: hapifhir/org.hl7.fhir.core
        tag: '6.1.8'
        path: .
        file: validator_cli.jar

    - name: Download the file
      uses: suisei-cn/actions-download-file@v1.4.0
      id: downloadfile1
      with:
        url: "https://jpfhir.jp/fhir/fhir_dotFHIR_packages.tgz"
        target: .
  
    - name: Download the file
      uses: suisei-cn/actions-download-file@v1.4.0
      id: downloadfile2
      with:
        url: "https://jpfhir.jp/fhir/core/terminology/jpfhir-terminology.r4-1.2.1.tgz"
        target: .    
    
    - name: Prepare for using all dependent packages including Jp modified version of hl7.fhir.r4.core Package 
      env:
        JPPACKAGECOREtgz: fhir_dotFHIR_packages.tgz
        JPTerminologyCOREdir: jpfhir-terminology.r4#1.2.1
        JPTerminologyCOREPtgz: jpfhir-terminology.r4-1.2.1.tgz
        JPCOREtgzjp: jp-core.r4-1.1.2.tgz
        JPCOREdir: jp-core.r4#1.1.2
      run: |
        ls -l .
        pwd
        echo '--1-'
        mkdir -p /home/runner/.fhir
        mv $JPPACKAGECOREtgz /home/runner/.fhir/
        mkdir -p /home/runner/.fhir/work
        mv $JPTerminologyCOREPtgz /home/runner/.fhir/work/$JPTerminologyCOREPtgz
        cd /home/runner/.fhir
        tar xzf $JPPACKAGECOREtgz
        cd /home/runner/.fhir/work
        tar xzf $JPTerminologyCOREPtgz
        cd /home/runner/.fhir
        mkdir -p packages/$JPTerminologyCOREdir
        mv /home/runner/.fhir/work/package /home/runner/.fhir/packages/$JPTerminologyCOREdir
        mv /home/runner/work/clinical-core/clinical-core/packages_snapshot/$JPCOREtgzjp /home/runner/.fhir/work/
        cd /home/runner/.fhir/work
        tar xzf $JPCOREtgzjp
        mkdir -p /home/runner/.fhir/packages/$JPCOREdir
        ls -l /home/runner/.fhir/packages/
        mv /home/runner/.fhir/work/package /home/runner/.fhir/packages/$JPCOREdir/

    - name: Set current datetime
      run: echo "CURRENT_DATETIME=$(date '+%Y-%m-%dT%H:%M')" >> $GITHUB_ENV

    - name: Use datetime in a script
      run: echo "The current datetime is ${{ env.CURRENT_DATETIME }}"

    - name: apply the version of sushi-config.yaml
      run: |
        sed 's/version: 1.2.0-temp/version: ${{ env.release_version }}/g' sushi-config.yaml > sushi-config-temp.yaml
        mv sushi-config-temp.yaml sushi-config.yaml
        cd forPackageRelease
        sed 's/1.2.0-temp/${{ env.release_version }}/g' package-diff.json >package-diff-temp.json
        sed 's/1.2.0-temp/${{ env.release_version }}/g' package-snap.json >package-snap-temp.json
        sed 's/"description": "/"description": "${{ env.CURRENT_DATETIME }}UTC_/g' package-diff-temp.json > package-diff-temp2.json
        sed 's/"description": "/"description": "${{ env.CURRENT_DATETIME }}UTC_/g' package-snap-temp.json > package-snap-temp2.json
        mv package-diff-temp2.json package-diff.json
        mv package-snap-temp2.json package-snap.json
        sed 's/1.2.0-temp/${{ env.release_version }}/g' package-diffCLINS.json >package-diffCLINS-temp.json
        sed 's/1.2.0-temp/${{ env.release_version }}/g' package-snapCLINS.json >package-snapCLINS-temp.json
        sed 's/"description": "/"description": "${{ env.CURRENT_DATETIME }}UTC_/g' package-diffCLINS-temp.json > package-diffCLINS-temp2.json
        sed 's/"description": "/"description": "${{ env.CURRENT_DATETIME }}UTC_/g' package-snapCLINS-temp.json > package-snapCLINS-temp2.json
        mv package-diffCLINS-temp2.json package-diffCLINS.json
        mv package-snapCLINS-temp2.json package-snapCLINS.json
        cd ..

    - name: Run sushi and IG Publisher
      run: | 
        mkdir -p input-cache
        mv ./publisher.jar ./input-cache
        unset DISPLAY
        sushi .
        : # CodeSystem-v3-ActCode.jsonはFSHから変換するのではなくJSONを直接コピーする。
        : # Ccp v3ActJSON/CodeSystem-v3-ActCode.json  fsh-generated/resources/CodeSystem-v3-ActCode.json
        java -Xmx4G -Djava.awt.headless=true -jar ./input-cache/publisher.jar -no-sushi -ig ig.ini  -tx n/a -language "ja" 

    - name: replace url of html files referring simplifier.net package
      run:  |
        : # https://simplifier.net/resolve?scope=jp-core.r4@1.1.1-snap&amp;canonical=http://jpfhir.jp/fhir/core/StructureDefinition/JP_Observation_Common"
        : #   ↓
        : # https://jpfhir.jp/fhir/core/1.1.1/StructureDefinition-jp-observation-common.html
        : # https://simplifier.net/resolve?canonical=http%3A%2F%2Fjpfhir.jp%2Ffhir%2Fcore%2FValueSet%2FJP_MedicationSubstitutionNotAllowedReason_VS&scope=jpfhir-terminology@1.1.1
        cd output
        for file in *.html
        do
          python ../script/replaceUrls.py $file >$file".2.html"
          cp $file".2.html" $file
        done
        cd ..
    - name: prepare gtz files for upload to remote site
      run: | 
        tar czf output.tgz output

    - name:  create differential package 
      run: | 
        cd fsh-generated
        mkdir -p package
        cp resources/StructureDefinition-* package/
        cp resources/ValueSet-* package/
        cp resources/CodeSystem-* package/
        cp resources/ImplementationGuide-* package/
        cp resources/NamingSystem-* package/
        cp ../forPackageRelease/package-diff.json package/package.json
        tar czf jp-eCSCLINS-package-diff.tgz package
        cp jp-eCSCLINS-package-diff.tgz ../forPackageRelease/jp-eCSCLINS.r4-${{ env.release_version }}.tgz
  
    - name: validate
      run: |
        java -Xmx4G -Djava.awt.headless=true -jar validator_cli.jar fsh-generated/resources/Bundle-Bundle-CLINS-*.json -display-issues-are-warnings -version 4.0.1 -locale ja-JP -ig jp-core.r4#1.1.2 -ig jpfhir-terminology.r4#1.2.1 -ig fsh-generated/jp-eCSCLINS-package-diff.tgz -tx n/a  -language ja

    - name: generate snapshot package using sushi -s command       
      run: |
        rm -rf fsh-generated
        sushi -s .
        mv fsh-generated fsh-generated-snap
        mkdir -p forPackageRelease/snapshot/package/
        cp fsh-generated-snap/resources/StructureDefinition-* forPackageRelease/snapshot/package/
        cp fsh-generated-snap/resources/ValueSet-* forPackageRelease/snapshot/package/
        cp fsh-generated-snap/resources/CodeSystem-* forPackageRelease/snapshot/package/
        cp fsh-generated-snap/resources/ImplementationGuide-* forPackageRelease/snapshot/package/
        cp fsh-generated-snap/resources/NamingSystem-* forPackageRelease/snapshot/package/
        cp forPackageRelease/package-snap.json forPackageRelease/snapshot/package/package.json
        cd forPackageRelease/snapshot
        tar czf jp-eCSCLINS-package-snap.tgz package
        cd ..
        cp snapshot/jp-eCSCLINS-package-snap.tgz jp-eCSCLINS.r4-${{ env.release_version }}-snap.tgz
        cd ..

    - name: ssh key generate
      run: echo "$SSH_PRIVATE_KEY" > key && chmod 600 key; ls -l key
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_TO_JPFHIR }}

    - name: rsync remote-site-deploy
      run: |
        rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT_JPFHIR }}" --delete output.tgz  forPackageRelease/jp-eCSCLINS.r4-${{ env.release_version }}.tgz forPackageRelease/jp-eCSCLINS.r4-${{ env.release_version }}-snap.tgz ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}:${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/clins/ --exclude .htaccess
        ssh -i key  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -p ${{ secrets.SSH_PORT_JPFHIR }} ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}   'cd ${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/clins/ ; tar xzf output.tgz'


    - name: copy CLINS Profiles to the target      
      run: |
        rm -rf input/fsh/profiles/eCS-noCLINS
        cd input/fsh/profiles
        for file in eCS-forCLINS/*; do
          mv ${file} ${file}.fsh
        done

    - name: generate CLINS differential package using sushi  command      
      run: |
        rm -rf fsh-generated
        sushi .
        mv fsh-generated fsh-generated-CLINSdiff
        mkdir -p forPackageRelease/CLINSdiff/package/
        cp fsh-generated-CLINSdiff/resources/StructureDefinition-* forPackageRelease/CLINSdiff/package/
        cp fsh-generated-CLINSdiff/resources/ValueSet-* forPackageRelease/CLINSdiff/package/
        cp fsh-generated-CLINSdiff/resources/CodeSystem-* forPackageRelease/CLINSdiff/package/
        cp fsh-generated-CLINSdiff/resources/ImplementationGuide-* forPackageRelease/CLINSdiff/package/
        cp fsh-generated-CLINSdiff/resources/NamingSystem-* forPackageRelease/CLINSdiff/package/
        cp forPackageRelease/package-diffCLINS.json forPackageRelease/CLINSdiff/package/package.json
        cd forPackageRelease/CLINSdiff
        tar czf jp-CLINS-package-diff.tgz package
        cd ..
        cp CLINSdiff/jp-CLINS-package-diff.tgz jp-CLINS.r4-${{ env.release_version }}.tgz
        cd ..

    - name: generate CLINS snapshot package using sushi -s command      
      run: |
        rm -rf fsh-generated
        sushi -s .
        mv fsh-generated fsh-generated-CLINSsnap
        mkdir -p forPackageRelease/CLINSsnap/package/
        cp fsh-generated-CLINSsnap/resources/StructureDefinition-* forPackageRelease/CLINSsnap/package/
        cp fsh-generated-CLINSsnap/resources/ValueSet-* forPackageRelease/CLINSsnap/package/
        cp fsh-generated-CLINSsnap/resources/CodeSystem-* forPackageRelease/CLINSsnap/package/
        cp fsh-generated-CLINSsnap/resources/ImplementationGuide-* forPackageRelease/CLINSsnap/package/
        cp fsh-generated-CLINSsnap/resources/NamingSystem-* forPackageRelease/CLINSsnap/package/
        cp forPackageRelease/package-snapCLINS.json forPackageRelease/CLINSsnap/package/package.json
        cd forPackageRelease/CLINSsnap
        tar czf jp-CLINS-package-snap.tgz package
        cd ..
        cp CLINSsnap/jp-CLINS-package-snap.tgz jp-CLINS.r4-${{ env.release_version }}-snap.tgz
        cd ..

    - name: rsync remote-site-deploy
      run: |
        rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT_JPFHIR }}"  forPackageRelease/jp-CLINS.r4-${{ env.release_version }}.tgz forPackageRelease/jp-CLINS.r4-${{ env.release_version }}-snap.tgz ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}:${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/clins/ --exclude .htaccess
  
